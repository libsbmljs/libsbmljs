/**
 * # BoundaryCondition class
 */
[Prefix="libsbml::"]
interface BoundaryCondition {
  /**
   * Returns the value of the "variable" attribute of this BoundaryCondition.
   *
   * @return the value of the "variable" attribute of this BoundaryCondition as
   * a string.
   */
  DOMString getVariable();


  /**
   * Returns the value of the "type" attribute of this BoundaryCondition.
   *
   * @return the value of the "type" attribute of this BoundaryCondition as a
   * BoundaryConditionKind_t.
   */
  libsbml__idl__BoundaryConditionKind_t getType();


  /**
   * Returns the value of the "type" attribute of this BoundaryCondition.
   *
   * @return the value of the "type" attribute of this BoundaryCondition as a
   * string.
   */
  DOMString getTypeAsString();


  /**
   * Returns the value of the "coordinateBoundary" attribute of this
   * BoundaryCondition.
   *
   * @return the value of the "coordinateBoundary" attribute of this
   * BoundaryCondition as a string.
   */
  DOMString getCoordinateBoundary();


  /**
   * Returns the value of the "boundaryDomainType" attribute of this
   * BoundaryCondition.
   *
   * @return the value of the "boundaryDomainType" attribute of this
   * BoundaryCondition as a string.
   */
  DOMString getBoundaryDomainType();


  /**
   * Predicate returning true if this BoundaryCondition's "variable"
   * attribute is set.
   *
   * return {boolean} true if this BoundaryCondition's "variable" attribute has been
   * set, otherwise false is returned.
   */
  boolean isSetVariable();


  /**
   * Predicate returning true if this BoundaryCondition's "type" attribute
   * is set.
   *
   * return {boolean} true if this BoundaryCondition's "type" attribute has been set,
   * otherwise false is returned.
   */
  boolean isSetType();


  /**
   * Predicate returning true if this BoundaryCondition's
   * "coordinateBoundary" attribute is set.
   *
   * return {boolean} true if this BoundaryCondition's "coordinateBoundary" attribute
   * has been set, otherwise false is returned.
   */
  boolean isSetCoordinateBoundary();


  /**
   * Predicate returning true if this BoundaryCondition's
   * "boundaryDomainType" attribute is set.
   *
   * return {boolean} true if this BoundaryCondition's "boundaryDomainType" attribute
   * has been set, otherwise false is returned.
   */
  boolean isSetBoundaryDomainType();


  /**
   * Sets the value of the "variable" attribute of this BoundaryCondition.
   *
   * @param variable DOMString& value of the "variable" attribute to be set.
   *
   *
   *
   * @li @sbmlconstant{LIBSBML_INVALID_ATTRIBUTE_VALUE,
   * OperationReturnValues_t}
   */
  long setVariable(DOMString variable);


  /**
   * Sets the value of the "type" attribute of this BoundaryCondition.
   *
   * @param type BoundaryConditionKind_t value of the "type" attribute to be
   * set.
   *
   *
   *
   * @li @sbmlconstant{LIBSBML_INVALID_ATTRIBUTE_VALUE,
   * OperationReturnValues_t}
   */
  long setType(libsbml__idl__BoundaryConditionKind_t type);


  /**
   * Sets the value of the "type" attribute of this BoundaryCondition.
   *
   * @param type DOMString& of the "type" attribute to be set.
   *
   *
   *
   * @li @sbmlconstant{LIBSBML_INVALID_ATTRIBUTE_VALUE,
   * OperationReturnValues_t}
   */
  long setType(DOMString type);


  /**
   * Sets the value of the "coordinateBoundary" attribute of this
   * BoundaryCondition.
   *
   * @param coordinateBoundary DOMString& value of the "coordinateBoundary"
   * attribute to be set.
   *
   *
   *
   * @li @sbmlconstant{LIBSBML_INVALID_ATTRIBUTE_VALUE,
   * OperationReturnValues_t}
   */
  long setCoordinateBoundary(DOMString coordinateBoundary);


  /**
   * Sets the value of the "boundaryDomainType" attribute of this
   * BoundaryCondition.
   *
   * @param boundaryDomainType DOMString& value of the "boundaryDomainType"
   * attribute to be set.
   *
   *
   *
   * @li @sbmlconstant{LIBSBML_INVALID_ATTRIBUTE_VALUE,
   * OperationReturnValues_t}
   */
  long setBoundaryDomainType(DOMString boundaryDomainType);


  /**
   * Unsets the value of the "variable" attribute of this BoundaryCondition.
   *
   */
  long unsetVariable();


  /**
   * Unsets the value of the "type" attribute of this BoundaryCondition.
   *
   */
  long unsetType();
};

BoundaryCondition implements SBase;
