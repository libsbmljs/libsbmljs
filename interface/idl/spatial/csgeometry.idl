/**
 * # CSGeometry class
 */
[Prefix="libsbml::"]
interface CSGeometry {
  /**
   * Get a CSGObject from the CSGeometry.
   *
   * @param {number} n an unsigned long representing the index of the CSGObject to
   * retrieve.
   *
   * @return {CSGObject} the nth CSGObject in the ListOfCSGObjects within this CSGeometry.
   */
  CSGObject getCSGObject(unsigned long n);


  /**
   * Get a CSGObject from the CSGeometry based on the DomainType to which it
   * refers.
   *
   * @param {string} sid a string representing the domainType attribute of the CSGObject
   * object to retrieve.
   *
   * @return {CSGObject} the first CSGObject in this CSGeometry based on the given
   * domainType attribute or NULL if no such CSGObject exists.
   */
  CSGObject getCSGObjectByDomainType(DOMString sid);


  /**
   * Adds a copy of the given CSGObject to this CSGeometry.
   *
   * @param {CSGObject} csgo the CSGObject object to add.
   */
  long addCSGObject(CSGObject csgo);


  /**
   * Get the number of CSGObject objects in this CSGeometry.
   *
   * @return {number} the number of CSGObject objects in this CSGeometry.
   */
  unsigned long getNumCSGObjects();


  /**
   * Creates a new CSGObject object, adds it to this CSGeometry object and
   * returns the CSGObject object created.
   *
   * @return {CSGObject} a new CSGObject object instance.
   */
  CSGObject createCSGObject();


  /**
   * Removes the nth CSGObject from this CSGeometry and returns a pointer to
   * it.
   *
   * @param {number} n an unsigned long representing the index of the CSGObject to
   * remove.
   *
   * @return {CSGObject} a pointer to the nth CSGObject in this CSGeometry.
   *
   *
   *
   * **Note:** the caller owns the returned object and is responsible for deleting
   * it.
   */
  CSGObject removeCSGObject(unsigned long n);
};

CSGeometry implements GeometryDefinition;