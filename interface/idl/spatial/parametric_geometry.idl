/**
 * # ParametricGeometry class
 */
[Prefix="libsbml::"]
interface ParametricGeometry {
  /**
   * Returns the value of the "spatialPoints" element of this
   * ParametricGeometry.
   *
   * @return {SpatialPoints} the value of the "spatialPoints" element of this
   * ParametricGeometry as a SpatialPoints*.
   */
  SpatialPoints getSpatialPoints();


  /**
   * Predicate returning true if this ParametricGeometry's "spatialPoints"
   * element is set.
   *
   * return {boolean} true if this ParametricGeometry's "spatialPoints" element has
   * been set, otherwise false is returned.
   */
  boolean isSetSpatialPoints();


  /**
   * Sets the value of the "spatialPoints" element of this ParametricGeometry.
   *
   * @param {SpatialPoints} spatialPoints SpatialPoints* value of the "spatialPoints" element
   * to be set.
   */
  long setSpatialPoints(SpatialPoints spatialPoints);


  /**
   * Creates a new SpatialPoints object, adds it to this ParametricGeometry
   * object and returns the SpatialPoints object created.
   *
   * @return {SpatialPoints} a new SpatialPoints object instance.
   */
  SpatialPoints createSpatialPoints();


  /**
   * Unsets the value of the "spatialPoints" element of this
   * ParametricGeometry.
   */
  long unsetSpatialPoints();


  /**
   * Returns the ListOfParametricObjects from this ParametricGeometry.
   *
   * @return {ListOfParametricObjects} the ListOfParametricObjects from this ParametricGeometry.
   */
  /*ListOfParametricObjects getListOfParametricObjects();*/


  /**
   * Get a ParametricObject from the ParametricGeometry.
   *
   * @param {number} n an unsigned long representing the index of the ParametricObject to
   * retrieve.
   *
   * @return {ParametricObject} the nth ParametricObject in the ListOfParametricObjects within
   * this ParametricGeometry.
   */
  ParametricObject getParametricObject(unsigned long n);


  /**
   * Get a ParametricObject from the ParametricGeometry based on the DomainType
   * to which it refers.
   *
   * @param {string} sid a string representing the domainType attribute of the
   * ParametricObject object to retrieve.
   *
   * @return {ParametricObject} the first ParametricObject in this ParametricGeometry based on the
   * given domainType attribute or NULL if no such ParametricObject exists.
   */
  ParametricObject getParametricObjectByDomainType(DOMString sid);


  /**
   * Adds a copy of the given ParametricObject to this ParametricGeometry.
   *
   * @param {ParametricObject} po the ParametricObject object to add.
   */
  long addParametricObject(ParametricObject po);


  /**
   * Get the number of ParametricObject objects in this ParametricGeometry.
   *
   * @return {number} the number of ParametricObject objects in this ParametricGeometry.
   */
  unsigned long getNumParametricObjects();


  /**
   * Creates a new ParametricObject object, adds it to this ParametricGeometry
   * object and returns the ParametricObject object created.
   *
   * @return {ParametricObject} a new ParametricObject object instance.
   */
  ParametricObject createParametricObject();


  /**
   * Removes the nth ParametricObject from this ParametricGeometry and returns
   * a pointer to it.
   *
   * @param {number} n an unsigned long representing the index of the ParametricObject to
   * remove.
   *
   * @return {ParametricObject} a pointer to the nth ParametricObject in this ParametricGeometry.
   *
   * **Note:** the caller owns the returned object and is responsible for deleting
   * it.
   */
  ParametricObject removeParametricObject(unsigned long n);
};

ParametricGeometry implements GeometryDefinition;
