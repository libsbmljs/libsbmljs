/**
 * # An objective function for a flux.
 *
 * An integral component in a complete description of a steady-state model is
 * the so-called objective function, which generally consists of a
 * linear combination of model variables (fluxes) and a sense (direction). In
 * the SBML Level 3 fbc ("fbc") package, this concept
 * is succinctly captured in the Objective class.  An Objective object
 * includes a list of flux objectives, each in the form of a FluxObjective
 * object.
 * 
 * The FluxObjective class is a relatively simple container for a model
 * variable weighted by a signed linear coefficient.  In addition to the
 * common SBML object attributes of "id" and "name" (both of which are
 * optional), it adds two required attributes: "reaction" and "coefficient".
 *
 * The "reaction" attribute must have a value of type `SIdRef`,
 * and its value is restricted to the identifier of a Reaction object in the
 * model.  The "reaction" attribute identifiers the reaction to which the
 * FluxObjective applies.  The "coefficient" attribute must have a value of
 * type `double`, and refers to the coefficient that this
 * FluxObjective takes in the enclosing Objective.  Its unit of measurement
 * is `dimensionless`.  The meaning of these two attributes
 * together is given by the formula coefficient times;
 * reaction-flux.  Since reactions in SBML Level 3 are in units of
 * extent, the units of a flux objective are thus extent per
 * time.
 *
 * The following example illustrates the use of these attributes:
 *
 * ```
 * <fbc:listOfObjectives fbc:activeObjective="obj1">
 *  <fbc:objective fbc:id="obj1" fbc:type="maximize">
 *   <fbc:listOfFluxObjectives>
 *    <fbc:fluxObjective fbc:reaction="R1" fbc:coefficient="1"/>
 *    <fbc:fluxObjective fbc:reaction="R2" fbc:coefficient="2"/>
 *   </fbc:listOfFluxObjectives>
 *  </fbc:objective>
 * </fbc:listOfObjectives>
 * ```
 */
[Prefix="libsbml::"]
interface Objective {
  /**
   * Returns the value of the "reaction" attribute of this FluxObjective.
   *
   * @return {string} the value of the "reaction" attribute of this FluxObjective as a
   * string.
   */
  DOMString getReaction();

  /**
   * Returns the value of the "coefficient" attribute of this FluxObjective.
   *
   * @return {number} the value of the "coefficient" attribute of this FluxObjective
   * as a double.
   */
  double getCoefficient();


  /**
   * Predicate returning true if this FluxObjective's "reaction" attribute
   * is set.
   *
   * @return {boolean} true if this FluxObjective's "reaction" attribute has been set,
   * otherwise false is returned.
   */
  boolean isSetReaction();


  /**
   * Predicate returning true if this FluxObjective's "coefficient"
   * attribute is set.
   *
   * @return {boolean} true if this FluxObjective's "coefficient" attribute has been
   * set, otherwise false is returned.
   */
  boolean isSetCoefficient();


  /**
   * Sets the value of the "reaction" attribute of this FluxObjective.
   *
   * @param {string} reaction the value of the "reaction" attribute to be set
   */
  long setReaction(DOMString reaction);


  /**
   * Sets the value of the "coefficient" attribute of this FluxObjective.
   *
   * @param {number} coefficient the value of the "coefficient" attribute to be set
   */
  long setCoefficient(double coefficient);


  /**
   * Unsets the value of the "reaction" attribute of this FluxObjective.
   */
  long unsetReaction();


  /**
   * Unsets the value of the "coefficient" attribute of this FluxObjective.
   */
  long unsetCoefficient();
};
