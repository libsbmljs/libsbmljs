/**
 * # DistribInverseGammaDistribution
 */
[Prefix="libsbml::"]
interface DistribInverseGammaDistribution {
  /**
   * Creates a new DistribInverseGammaDistribution using the given SBML Level,
   * Version and "distrib" package version.
   *
   * @param {number} level an unsigned int, the SBML Level to assign to this
   * DistribUncertStatisticSpan.
   *
   * @param {number} version an unsigned int, the SBML Version to assign to this
   * DistribUncertStatisticSpan.
   *
   * @param {number} pkgVersion an unsigned int, the SBML Distrib Version to assign to
   * this DistribUncertStatisticSpan.
   */
  void DistribInverseGammaDistribution(unsigned long level, unsigned long version, unsigned long pkgVersion);

  /**
   * Returns the value of the "shape" element of this
   * DistribInverseGammaDistribution.
   *
   * @return {DistribUncertValue} the value of the "shape" element of this
   * DistribInverseGammaDistribution as a DistribUncertValue.
   */
  DistribUncertValue getShape();


  /**
   * Returns the value of the "scale" element of this
   * DistribInverseGammaDistribution.
   *
   * @return {DistribUncertValue} the value of the "scale" element of this
   * DistribInverseGammaDistribution as a DistribUncertValue.
   */
  DistribUncertValue getScale();


  /**
   * Predicate returning @c true if this DistribInverseGammaDistribution's
   * "shape" element is set.
   *
   * @return {boolean} true if this DistribInverseGammaDistribution's "shape" element
   * has been set, otherwise @c false is returned.
   */
  boolean isSetShape();


  /**
   * Predicate returning @c true if this DistribInverseGammaDistribution's
   * "scale" element is set.
   *
   * @return {boolean} true if this DistribInverseGammaDistribution's "scale" element
   * has been set, otherwise @c false is returned.
   */
  boolean isSetScale();


  /**
   * Sets the value of the "shape" element of this
   * DistribInverseGammaDistribution.
   *
   * @param {DistribUncertValue} shape DistribUncertValue value of the "shape" element to be set.
   */
  long setShape(DistribUncertValue shape);


  /**
   * Sets the value of the "scale" element of this
   * DistribInverseGammaDistribution.
   *
   * @param {DistribUncertValue} scale DistribUncertValue value of the "scale" element to be set.
   */
  long setScale(DistribUncertValue scale);


  /**
   * Creates a new DistribUncertValue object, adds it to this
   * DistribInverseGammaDistribution object and returns the DistribUncertValue
   * object created.
   *
   * @return {DistribUncertValue} a new DistribUncertValue object instance.
   */
  DistribUncertValue createShape();


  /**
   * Creates a new DistribUncertValue object, adds it to this
   * DistribInverseGammaDistribution object and returns the DistribUncertValue
   * object created.
   *
   * @return {DistribUncertValue} a new DistribUncertValue object instance.
   */
  DistribUncertValue createScale();


  /**
   * Unsets the value of the "shape" element of this
   * DistribInverseGammaDistribution.
   */
  long unsetShape();


  /**
   * Unsets the value of the "scale" element of this
   * DistribInverseGammaDistribution.
   */
  long unsetScale();
};

DistribInverseGammaDistribution implements DistribContinuousUnivariateDistribution;
