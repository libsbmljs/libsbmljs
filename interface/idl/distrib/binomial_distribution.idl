/**
 * # DistribBinomialDistribution
 */
[Prefix="libsbml::"]
interface DistribBinomialDistribution {
  /**
   * Creates a new DistribBinomialDistribution using the given SBML Level,
   * Version and "distrib" package version.
   *
   * @param {number} level an unsigned int, the SBML Level to assign to this
   * DistribUncertStatisticSpan.
   *
   * @param {number} version an unsigned int, the SBML Version to assign to this
   * DistribUncertStatisticSpan.
   *
   * @param {number} pkgVersion an unsigned int, the SBML Distrib Version to assign to
   * this DistribUncertStatisticSpan.
   */
  void DistribBinomialDistribution(unsigned long level, unsigned long version, unsigned long pkgVersion);

  /**
   * Returns the value of the "numberOfTrials" element of this
   * DistribBinomialDistribution.
   *
   * @return {DistribUncertValue} the value of the "numberOfTrials" element of this
   * DistribBinomialDistribution as a DistribUncertValue.
   */
  DistribUncertValue getNumberOfTrials();


  /**
   * Returns the value of the "probabilityOfSuccess" element of this
   * DistribBinomialDistribution.
   *
   * @return {DistribUncertValue} the value of the "probabilityOfSuccess" element of this
   * DistribBinomialDistribution as a DistribUncertValue.
   */
  DistribUncertValue getProbabilityOfSuccess();


  /**
   * Predicate returning true if this DistribBinomialDistribution's
   * "numberOfTrials" element is set.
   *
   * @return {boolean} true if this DistribBinomialDistribution's "numberOfTrials"
   * element has been set, otherwise false is returned.
   */
  boolean isSetNumberOfTrials();


  /**
   * Predicate returning true if this DistribBinomialDistribution's
   * "probabilityOfSuccess" element is set.
   *
   * @return {boolean} true if this DistribBinomialDistribution's
   * "probabilityOfSuccess" element has been set, otherwise false is
   * returned.
   */
  boolean isSetProbabilityOfSuccess();


  /**
   * Sets the value of the "numberOfTrials" element of this
   * DistribBinomialDistribution.
   *
   * @param {DistribUncertValue} numberOfTrials DistribUncertValue value of the "numberOfTrials"
   * element to be set.
   */
  long setNumberOfTrials(DistribUncertValue numberOfTrials);


  /**
   * Sets the value of the "probabilityOfSuccess" element of this
   * DistribBinomialDistribution.
   *
   * @param {DistribUncertValue} probabilityOfSuccess value of the
   * "probabilityOfSuccess" element to be set.
   */
  long setProbabilityOfSuccess(DistribUncertValue probabilityOfSuccess);


  /**
   * Creates a new DistribUncertValue object, adds it to this
   * DistribBinomialDistribution object and returns the DistribUncertValue
   * object created.
   *
   * @return {DistribUncertValue} a new DistribUncertValue object instance.
   */
  DistribUncertValue createNumberOfTrials();


  /**
   * Creates a new DistribUncertValue object, adds it to this
   * DistribBinomialDistribution object and returns the DistribUncertValue
   * object created.
   *
   * @return {DistribUncertValue} a new DistribUncertValue object instance.
   */
  DistribUncertValue createProbabilityOfSuccess();


  /**
   * Unsets the value of the "numberOfTrials" element of this
   * DistribBinomialDistribution.
   */
  long unsetNumberOfTrials();


  /**
   * Unsets the value of the "probabilityOfSuccess" element of this
   * DistribBinomialDistribution.
   */
  long unsetProbabilityOfSuccess();
};

DistribBinomialDistribution implements DistribBase;
