/**
 * # Extension of Compartment for the "multi" package.
 *
 * The MultiCompartmentPlugin object is used to extend the standard SBML
 * Compartment base object with an optional "compartmentType" attribute, a
 * required "isType" Boolean attribute, and a child
 * ListOfCompartmentReferences.  The "isType" attribute flags whether this
 * Compartment should be treated as a standard SBML Compartment (if @c false),
 * or as a more generic rule-based "type" of Compartment (if @c true).  A
 * compartment "type" is a template (in the sense of prototype) for all
 * Compartment objects referencing it (via "compartmentType" attributes). A
 * Species object directly referencing a compartment type is not a "fully
 * defined" species, but rather a "template" species.  If the value of the
 * "isType" attribute is @c false, the Compartment object is a "not-a-type"
 * compartment, and it is similar to a SBML core Compartment except it can
 * reference a compartment type and can have a ListOfCompartmentReferences
 * child.  Each child CompartmentReference in the ListOfCompartmentReferences
 * defines a subcompartment of the parent Compartment.  The "compartmentType"
 * attribute identifies this Compartment as the CompartmentType defined
 * elsewhere in the Model.  If the "compartmentType" attribute is set, the
 * "isType" attribute must be @c true.
 */

[Prefix="libsbml::"]
interface MultiCompartmentPlugin {
  /**
   * Returns the value of the "compartmentType" attribute of this compartment.
   *
   * @return {string} the "compartmentType" attribute value.
   */
  DOMString getCompartmentType();


  /**
   * Returns @c true if this compartment's "compartmentType" attribute has
   * been set.
   *
   * @return {boolean} @c true if the "compartmentType" attribute has been set;
   * otherwise, @c false is returned.
   */
  boolean isSetCompartmentType();


  /**
   * Sets the value of the "compartmentType" attribute on this compartment.
   *
   * @param {string} compartmentType the new value for the attribute.
   */
  long setCompartmentType(DOMString compartmentType);


  /**
   * Unsets the value of the "compartmentType" attribute.
   */
  long unsetCompartmentType();


  /**
   * Returns the value of the "isType" attribute.
   *
   * @return {boolean} the value of the "isType" attribute.
   */
  boolean getIsType();


  /**
   * Returns @c true if this compartment's "isType" attribute has been set.
   *
   * @return {boolean} @c true if the "isType" attribute has been set; otherwise,
   * @c false is returned.
   */
  boolean isSetIsType();


  /**
   * Sets the value of the "isType" attribute.
   *
   * @param {boolean} isType the new value of the attribute.
   */
  long setIsType(boolean isType);


  /**
   * Unsets the value of the "isType" attribute.
   */
  long unsetIsType();
};

MultiCompartmentPlugin implements SBasePlugin;
