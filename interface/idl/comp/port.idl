/**
 * # An interface to be used in composition.
 *
 * The Port class was introduced by the SBML Level&nbsp;3 comp
 * ("comp") package to allow a Model to define a standard
 * interface between it and other models that might use it as a submodel.  It
 * derives from the SBaseRef class, and the elements defined there refer to
 * elements in the same parent Model as the Port object.  A Port object
 * instance therefore uses those attributes to define a port for a component
 * in a model.  When other SBaseRef or SBaseRef-derived classes refer to a
 * Port object using a "portRef" attribute, the element being referenced is
 * the element the Port object itself points to.
 *
 * In the present formulation of the Hierarchical %Model Composition
 * package, the use of ports is not enforced, nor is there any
 * mechanism to restrict which ports may be used in what ways---they are
 * only an advisory construct.  Future versions of this SBML package may
 * provide additional functionality to support explicit restrictions on
 * port use.  For the present definition of Hierarchical %Model Composition,
 * users of models containing ports are encouraged to respect the modeler's
 * intention in defining ports, and use the port definitions to interact
 * with components through their ports (when they have ports defined)
 * rather than interact directly with the components.
 *
 * The required attribute "id" is used to give an identifier to a
 * Port object so that other objects can refer to it.  The attribute has
 * type PortSId and is essentially identical to the SBML
 * primitive type SId, except that its namespace is limited to
 * the identifiers of Port objects defined within a Model object.  In
 * parallel, the PortSId type has a companion type,
 * PortSIdRef, that corresponds to the SBML primitive type
 * SIdRef; the value space of PortSIdRef is limited
 * to PortSId values.
 */
[Prefix="libsbml::"]
interface Port {
};

Port implements SBaseRef;
